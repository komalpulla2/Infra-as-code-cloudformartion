# This template add functionality to define Metadata section and grouping of parameters

AWSTemplateFormatVersion: 2010-09-09
Description: Sample stack to understand Metadata section and parameter grouping 

Metadata:
  AWS::CloudFormation::Interface: # metadata key that defines how parameters are grouped 
    ParameterGroups:
      - 
        Label:
          default: Database Instance Settings
        Parameters:
          - DbClass 
          - MultiAZ
          - AllocatedStorage
          - MasterUsername
          - MasterUserPassword
      - 
        Label:
          default: Network Settings 
        Parameters:
          - VpcId
          - DbSubnets 
          - SecurityGroupPorts
    ParameterLabels:
      DbClass:
        default: Database Instance Class 
      AllocatedStorage:
        default: Allocated Storage Size 

Parameters:
  DbClass:
    Type: String 
    Description: RDS instance class 
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
    ConstraintDescription: 'DbClass parameter can only have these values: db.m5.large, db.m5.xlarge'
    Default: db.m5.large 
  MasterUsername:
    Type: String 
    Description: Master username for the db instance 
    MaxLength: 10
    Default: dbadmin
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*' # Defining the allowed patterns for the username
  MasterUserPassword:
    Type: String 
    Description: Master user password for the db instance 
    MinLength: 8
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*' # Defining the allowed patterns for the username
    NoEcho: true # This will ask the characters you are typing
  MultiAZ:
    Type: String
    Description: Enable Multi-AZ?
    AllowedValues:
      - true 
      - false
    ConstraintDescription: MultiAZ parameter should be either true or false.
    Default: false 
  AllocatedStorage:
    Type: Number 
    Description: Database storage size in GB
    MinValue: 8
    MaxValue: 20
    ConstraintDescription: AllocatedStorage parameter value should be between 8 and 20.
    Default: 8
Resources:
  # Note: Please replace the value of VpcId property
  # with the VPC id of your default VPC
  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: vpc-09610f5a9438fd239
      GroupDescription: 'Database instances security group'
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          FromPort: 3306
          ToPort: 3306
          IpProtocol: tcp

  # Note: Please replace the value of SubnetIds property 
  # with the subnet ids of the subnets in your default VPC!
  DbSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnets to launch db instances into
      SubnetIds: 
        - subnet-06896bc0849ecea5d
        - subnet-0ad1e41282e3f94e7
        - subnet-0590f30b30e0d794f

  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DbClass 
      Engine: mariadb
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: true
      AllocatedStorage: !Ref AllocatedStorage 
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      DBSubnetGroupName: !Ref DbSubnetGroup
      VPCSecurityGroups: 
        - !Ref DbSecurityGroup
      